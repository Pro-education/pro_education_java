<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ru.ershov</groupId>
    <artifactId>pro_education</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>pro_education</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>11</java.version>
        <postgresql.version>42.2.5</postgresql.version>
        <jasypt.version>3.0.2</jasypt.version>
        <swagger.version>3.0.0</swagger.version>
        <testcontainers.version>1.15.1</testcontainers.version>
        <postgresql.password>p</postgresql.password>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.1</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>2.4.4</version>
        </dependency>

        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.1.6</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>1.15.1</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
                <!--                <configuration>-->
                <!--                    <environmentVariables>-->
                <!--                        <it-database.port>${it-database.port}</it-database.port>-->
                <!--                    </environmentVariables>-->
                <!--                </configuration>-->
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.33.0</version>

                <configuration>

                    <!-- Configured Docker images -->
                    <images>
                        <!--PostgreSQL image-->
                        <image>
                            <alias>db</alias>
                            <name>postgres:13.3</name>
<!--                            <build>-->
<!--                                <env>-->
<!--                                    <POSTGRES_DB>postgres</POSTGRES_DB>-->
<!--                                    <POSTGRES_USER>u</POSTGRES_USER>-->
<!--                                    <POSTGRES_PASSWORD>p</POSTGRES_PASSWORD>-->
<!--                                </env>-->
<!--                                <ports>-->
<!--                                    <port>5432</port>-->
<!--                                </ports>-->
<!--                            </build>-->
                            <run>
                                <containerNamePattern>%a</containerNamePattern>
                                <env>
                                    <POSTGRES_DB>postgres</POSTGRES_DB>
                                    <POSTGRES_USER>u</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>p</POSTGRES_PASSWORD>
                                </env>
                                <ports>
                                    <port>5432:5432</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>
                                            src/main/resources/db/migration/V1__V1__init.sql:/docker-entrypoint-initdb.d/1-V1__init.sql
                                        </volume>
                                        <volume>src/main/resources/db/migration/V2__V2__fill.sql:/docker-entrypoint-initdb.d/2-V2__fill.sql
                                        </volume>
                                        <volume>
                                            src/main/resources/db/migration/V3__V3__trigger.sql:/docker-entrypoint-initdb.d/3-V3__trigger.sql
                                        </volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                        <image>
                            <!-- Replace your-project-name -->
                            <name>${project.name}:${project.version}</name>

                            <build>
                                <!-- This is the same FROM used in a Dockerfile -->
                                <from>openjdk:11</from>

                                <!-- This is the same ENTRYPOINT used in a Dockerfile -->
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
                                        <!-- This extra argument is so Tomcat can start faster due to lack of entropy -->
                                        <!--                                        <arg>-Djava.security.egd=file:/dev/./urandom</arg>-->
                                        <arg>-jar</arg>
                                        <!-- /maven/ is the default dir that the plugin copies your artifact to -->
                                        <!--                                        <arg>/maven/${project.artifactId}.${project.packaging}</arg>-->
                                        <arg>/maven/pro_education-0.0.1-SNAPSHOT.jar</arg>
                                        <!--                                        pro_education-0.0.1-SNAPSHOT.jar-->
                                    </exec>
                                </entryPoint>

                                <assembly>
                                    <!-- This is a predefined assembly.xml that will only copy your final artifact to the Docker image -->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                            </build>
                        </image>

                    </images>
                </configuration>

                <executions>
                    <execution>
                        <id>prepare-it-database</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>postgres:13.3</name>
                                    <alias>it-database</alias>
                                    <run>
                                        <env>
                                            <POSTGRES_DB>postgres</POSTGRES_DB>
                                            <POSTGRES_USER>postgres</POSTGRES_USER>
                                            <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>5432:5432</port>
                                        </ports>
                                        <wait>
                                            <log>(?s)database system is ready to accept connections.*database system is
                                                ready to accept connections
                                            </log>
                                            <time>10000</time>
                                        </wait>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    src/main/resources/db/migration/V1__init.sql:/docker-entrypoint-initdb.d/1-V1__init.sql
                                                </volume>
                                                <volume>
                                                    src/main/resources/db/migration/V2__fill.sql:/docker-entrypoint-initdb.d/2-V2__fill.sql
                                                </volume>
                                                <volume>
                                                    src/main/resources/db/migration/V3__trigger.sql:/docker-entrypoint-initdb.d/3-V3__trigger.sql
                                                </volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>remove-it-database</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
